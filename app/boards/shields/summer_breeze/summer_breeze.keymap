/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {

// Ref: https://zmkfirmware.dev/docs/codes/

// ----------------------------------------------------------------------------------------------------------------------------------
// | F1 | F2 | F3 | |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BSPC  | |  -  |  =   |mo(2) |
// | F4 | F5 | F6 | |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   `   | |  [  |  ]   |  \   |
// |    | W  |    | |  CAPS |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   | |     |  UP  |      |
// | A  | S  | D  | | SHIFT |  Z  |  X  |  C   |  V   |  B   |                   |  N   |  M    |  ,    |  .   |   /   |  DEL  | |  L  |  DN  |  R   |
//                                      | CTRL | GUI  | ALT  |  SPACE |  | ENTER |SHIFT | CTRL  | mo(1) |
			bindings = <
&kp F1  &kp F2  &kp F3  &gresc    &kp N1 &kp N2 &kp N3    &kp N4   &kp N5                     &kp N6    &kp N7     &kp N8    &kp N9  &kp N0   &kp BSPC    &kp MINUS &kp EQUAL  &mo 2
&kp F4  &kp F5  &kp F6  &kp TAB   &kp Q  &kp W  &kp E     &kp R    &kp T                      &kp Y     &kp U      &kp I     &kp O   &kp P    &kp GRAVE   &kp LBKT  &kp RBKT   &kp BSLH
        &kp W           &kp CAPS  &kp A  &kp S  &kp D     &kp F    &kp G                      &kp H     &kp J      &kp K     &kp L   &kp SEMI &kp APOS              &kp UP 
&kp A   &kp S   &kp D   &kp LSHFT &kp Z  &kp X  &kp C     &kp V    &kp B                      &kp N     &kp M      &kp COMMA &kp DOT &kp FSLH &kp DEL     &kp LEFT  &kp DOWN   &kp RIGHT
                                                &kp LCTRL &kp LGUI &kp LALT &kp SPACE &kp RET &kp RSHFT &kp RCTRL  &mo 1
			>;
		};

		layer1 {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// |    |    |    | | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       | |      |      |      | 
// |    |    |    | |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  | |      | Mute | Play | 
// |    |    |    | |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   | |      | Vol+ |      | 
// |    |    |    | |       |     |     |      |      |      |                   |      |  _    |  +    |  {   |   }   |  "|"  | | Prev | Vol- | Next | 
//                                      |      |      |      |        |  |       |      |       |       |
			bindings = <
&trans  &trans  &trans  &bt BT_CLR &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &trans    &trans    &trans          &trans    &trans    &trans    &trans     &trans        &trans    
&trans  &trans  &trans  &kp F1     &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                       &kp F7    &kp F8    &kp F9          &kp F10   &kp F11   &kp F12   &trans     &kp C_MUTE    &kp C_PLAY_PAUSE 
        &trans          &kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp TILDE            &kp C_VOL_UP 
&trans  &trans  &trans  &trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans                       &trans    &kp MINUS &kp KP_PLUS     &kp LBRC  &kp RBRC  &kp PIPE  &kp C_PREV &kp C_VOL_DN  &kp C_NEXT
                                                                      &trans            &trans       &trans    &trans   &trans    &trans    &trans    &trans
			>;
		};

		layer2 {
// ---------------------------------------------------------------------------------------------------------------------------------- 
// |    |    |    | |       |     |     |      |      |      |                   |      |       |       |      |       |       | |     |      |      | 
// |    |    |    | |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       | |     |      |      | 
// |    |    |    | |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   ^   |  v   |  ->   |       | |     |      |      | 
// |    |    |    | |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |                   |  +   |   -   |   =   |  [   |   ]   |   \   | |     |      |      | 
//                                      |      |      |      |        |  |       |      |       |       |
			bindings = <
&trans  &trans  &trans  &trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans    &trans    &trans    &trans 
&trans  &trans  &trans  &kp GRAVE &kp N1 &kp N2 &kp N3  &kp N4  &kp N5                       &kp N6      &kp N7    &kp N8    &kp N9   &kp N0    &trans    &trans    &trans    &trans 
        &trans          &kp F1    &kp F2 &kp F3 &kp F4  &kp F5  &kp F6                       &trans      &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &trans              &trans           
&trans  &trans  &trans  &kp F7    &kp F8 &kp F9 &kp F10 &kp F11 &kp F12                      &kp KP_PLUS &kp MINUS &kp EQUAL &kp LBKT &kp RBKT  &kp BSLH  &trans    &trans    &trans 
                                                &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans
			>;
		};
	};
};
